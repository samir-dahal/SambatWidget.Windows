<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  General  -->
    <Style x:Key="text-default" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource FontRegular}" />
    </Style>
    <!--<Style BasedOn="{StaticResource text-default}" TargetType="{x:Type TextBlock}" />-->
    <Style
        x:Key="text-sm"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
    </Style>
    <Style
        x:Key="text-lg"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style
        x:Key="text-bold"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource FontBold}" />
    </Style>
    <Style
        x:Key="text-semibold"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource FontSemiBold}" />
    </Style>
    <Style
        x:Key="text-body"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
    </Style>
    <Style
        x:Key="text-muted"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource MutedColor}" />
    </Style>
    <Style
        x:Key="text-danger"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource DangerColor}" />
    </Style>
    <Style
        x:Key="text-success"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource SuccessColor}" />
    </Style>
    <Style
        x:Key="box-label"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{DynamicResource MutedColor}" />
    </Style>
    <Style
        x:Key="box-label-regular"
        BasedOn="{StaticResource text-default}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--  Buttons  -->
    <Style x:Key="btn-icon" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="btn-muted" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource MutedColor}" />
    </Style>
    <Style x:Key="btn-disabled" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource DisabledIconColor}" />
    </Style>
    <!--  Title  -->
    <Style x:Key="btn-title" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TitleTextColor}" />
    </Style>
    <!--  tab style  -->
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="FontFamily" Value="{StaticResource FontRegular}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="DarkGray"
                        BorderThickness="1,1,1,0"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="10,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TitleTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  platform style  -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
    </Style>
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
    </Style>
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        FontSize="14"
                        FontWeight="SemiBold"
                        Foreground="{DynamicResource TextColor}"
                        Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
    </Style>
    <!--  buttons  -->
    <Style x:Key="btn-hover-style" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="5"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TitleEntryPlaceholderColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource FontMedium}" />
    -->
    <!--<Setter Property="Margin" Value="0,5,0,0" />-->
    <!--
    </Style>-->
    <Style
        x:Key="btn-primary"
        BasedOn="{StaticResource btn-hover-style}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{StaticResource FontRegular}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryTextColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <!--<Setter Property="Margin" Value="0,5,0,0" />-->
    </Style>
    <Style
        x:Key="btn-secondary"
        BasedOn="{StaticResource btn-hover-style}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColorOpacity}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource FontRegular}" />
    </Style>
    <Style
        x:Key="btn-danger"
        BasedOn="{StaticResource btn-hover-style}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource DangerColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DangerColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryTextColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource FontRegular}" />
    </Style>

</ResourceDictionary>